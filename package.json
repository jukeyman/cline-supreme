{
  "name": "cline-supreme",
  "displayName": "Cline Supreme - Multi-Agent AI Assistant",
  "description": "Supreme Multi-Agent Orchestration & Enhancement System - AI assistant that can use your CLI and Editor with advanced multi-model support",
  "version": "2.0.0",
  "publisher": "supremeagent",
  "author": {
    "name": "Rick Jefferson Solutions",
    "email": "support@rjbizsolution.com"
  },
  "license": "Apache-2.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/cline/cline.git"
  },
  "engines": {
    "vscode": "^1.84.0",
    "node": ">=18.0.0"
  },
  "categories": [
    "AI",
    "Machine Learning",
    "Programming Languages",
    "Other"
  ],
  "keywords": [
    "ai",
    "assistant",
    "claude",
    "gpt",
    "llama",
    "multi-agent",
    "orchestration",
    "automation",
    "coding",
    "development"
  ],
  "main": "./dist/extension.js",
  "icon": "assets/icon.png",
  "activationEvents": [
    "onStartupFinished"
  ],
  "contributes": {
    "commands": [
      {
        "command": "cline.plusButtonTapped",
        "title": "New Task (Legacy)",
        "icon": "$(add)"
      },
      {
        "command": "cline.openInNewTab",
        "title": "Open In New Tab (Legacy)",
        "icon": "$(link-external)"
      },
      {
        "command": "clineSupreme.openDashboard",
        "title": "Open Cline Supreme Dashboard",
        "icon": "$(dashboard)"
      },
      {
        "command": "clineSupreme.createTask",
        "title": "Create New Task",
        "icon": "$(add)"
      },
      {
        "command": "clineSupreme.analyzeCode",
        "title": "Analyze Code",
        "icon": "$(search)"
      },
      {
        "command": "clineSupreme.optimizePerformance",
        "title": "Optimize Performance",
        "icon": "$(rocket)"
      },
      {
        "command": "clineSupreme.generateTests",
        "title": "Generate Tests",
        "icon": "$(beaker)"
      },
      {
        "command": "clineSupreme.refactorCode",
        "title": "Refactor Code",
        "icon": "$(tools)"
      },
      {
        "command": "clineSupreme.generateDocumentation",
        "title": "Generate Documentation",
        "icon": "$(book)"
      },
      {
        "command": "clineSupreme.deployProject",
        "title": "Deploy Project",
        "icon": "$(cloud-upload)"
      },
      {
        "command": "clineSupreme.setupCICD",
        "title": "Setup CI/CD",
        "icon": "$(gear)"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "cline-supreme",
          "title": "Cline Supreme",
          "icon": "$(robot)"
        }
      ]
    },
    "views": {
      "cline-supreme": [
        {
          "type": "webview",
          "id": "clineSupreme.dashboard",
          "name": "Dashboard",
          "when": "clineSupreme.enabled"
        },
        {
          "type": "webview",
          "id": "cline.chatView",
          "name": "Chat (Legacy)",
          "when": "cline.chatViewEnabled"
        }
      ]
    },
    "menus": {
      "explorer/context": [
        {
          "command": "clineSupreme.analyzeCode",
          "when": "resourceExtname =~ /\\.(js|ts|jsx|tsx|py|java|cpp|c|cs|php|rb|go|rs|swift|kt)$/",
          "group": "clineSupreme@1"
        },
        {
          "command": "clineSupreme.generateTests",
          "when": "resourceExtname =~ /\\.(js|ts|jsx|tsx|py|java|cpp|c|cs|php|rb|go|rs|swift|kt)$/",
          "group": "clineSupreme@2"
        },
        {
          "command": "clineSupreme.refactorCode",
          "when": "resourceExtname =~ /\\.(js|ts|jsx|tsx|py|java|cpp|c|cs|php|rb|go|rs|swift|kt)$/",
          "group": "clineSupreme@3"
        }
      ],
      "commandPalette": [
        {
          "command": "clineSupreme.openDashboard"
        },
        {
          "command": "clineSupreme.createTask"
        },
        {
          "command": "clineSupreme.analyzeCode"
        },
        {
          "command": "clineSupreme.deployProject"
        }
      ]
    },
    "configuration": {
      "title": "Cline Supreme",
      "properties": {
        "cline.apiProvider": {
          "type": "string",
          "enum": [
            "anthropic",
            "openai",
            "openrouter",
            "google",
            "aws-bedrock",
            "azure",
            "gcp-vertex",
            "cerebras",
            "groq",
            "ollama",
            "lm-studio",
            "custom"
          ],
          "default": "anthropic",
          "description": "AI API provider to use"
        },
        "cline.multiAgentMode": {
          "type": "boolean",
          "default": true,
          "description": "Enable multi-agent orchestration system"
        },
        "cline.autoModelSelection": {
          "type": "boolean",
          "default": true,
          "description": "Automatically select best model based on task complexity"
        },
        "cline.enableRevenueAgents": {
          "type": "boolean",
          "default": false,
          "description": "Enable revenue-generation agents for monetization workflows"
        },
        "clineSupreme.maxConcurrentTasks": {
          "type": "number",
          "default": 5,
          "minimum": 1,
          "maximum": 20,
          "description": "Maximum number of concurrent tasks"
        },
        "clineSupreme.autoSave": {
          "type": "boolean",
          "default": true,
          "description": "Automatically save files after modifications"
        },
        "clineSupreme.enableAdvancedOrchestration": {
          "type": "boolean",
          "default": true,
          "description": "Enable advanced multi-agent orchestration features"
        },
        "clineSupreme.defaultDeploymentTarget": {
          "type": "string",
          "enum": ["vercel", "netlify", "docker", "aws", "azure", "gcp"],
          "default": "vercel",
          "description": "Default deployment target for projects"
        },
        "clineSupreme.enableSecurityScanning": {
          "type": "boolean",
          "default": true,
          "description": "Enable automatic security vulnerability scanning"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run build",
    "build": "npm run build:extension && npm run build:webview",
    "build:extension": "esbuild src/extension.ts --bundle --outfile=dist/extension.js --external:vscode --format=cjs --platform=node --target=node18 --minify",
    "build:webview": "cd webview-ui && npm run build",
    "watch": "npm run watch:extension & npm run watch:webview",
    "watch:extension": "esbuild src/extension.ts --bundle --outfile=dist/extension.js --external:vscode --format=cjs --platform=node --target=node18 --watch",
    "watch:webview": "cd webview-ui && npm run dev",
    "dev": "npm run watch",
    "test": "npm run test:extension && npm run test:webview",
    "test:extension": "mocha",
    "test:webview": "cd webview-ui && npm test",
    "lint": "eslint src --ext ts && cd webview-ui && npm run lint",
    "format": "prettier --write src/**/*.ts && cd webview-ui && npm run format",
    "install:all": "npm install && cd webview-ui && npm install",
    "clean": "rm -rf dist && rm -rf webview-ui/dist",
    "deploy:vercel": "node scripts/deploy-vercel.js",
    "deploy:netlify": "node scripts/deploy-netlify.js",
    "deploy:aws": "node scripts/deploy-aws.js",
    "generate:docs": "node scripts/generate-docs.js",
    "demo": "node scripts/demo-orchestration.js"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.24.3",
    "@aws-sdk/client-bedrock-runtime": "^3.490.0",
    "@azure/openai": "^1.0.0-beta.12",
    "@google-ai/generativelanguage": "^2.5.0",
    "@google-cloud/vertexai": "^1.4.0",
    "axios": "^1.6.2",
    "dotenv": "^16.3.1",
    "openai": "^4.20.1",
    "zod": "^3.22.4",
    "uuid": "^9.0.1",
    "lodash": "^4.17.21",
    "crypto-js": "^4.2.0",
    "node-fetch": "^3.3.2",
    "ws": "^8.14.2",
    "express": "^4.18.2",
    "cors": "^2.8.5",
    "helmet": "^7.1.0",
    "rate-limiter-flexible": "^2.4.2"
  },
  "devDependencies": {
    "@types/vscode": "^1.84.0",
    "@types/node": "^20.10.0",
    "@types/uuid": "^9.0.7",
    "@types/lodash": "^4.14.202",
    "@types/crypto-js": "^4.2.1",
    "@types/ws": "^8.5.10",
    "@types/express": "^4.17.21",
    "@types/cors": "^2.8.17",
    "@typescript-eslint/eslint-plugin": "^6.13.1",
    "@typescript-eslint/parser": "^6.13.1",
    "esbuild": "^0.19.8",
    "eslint": "^8.54.0",
    "mocha": "^10.2.0",
    "prettier": "^3.1.0",
    "typescript": "^5.3.2",
    "ts-node": "^10.9.1",
    "@types/mocha": "^10.0.6",
    "source-map-support": "^0.5.21"
  },
  "extensionDependencies": [],
  "capabilities": {
    "virtualWorkspaces": {
      "supported": "limited",
      "description": "Cline Supreme requires access to the file system to read and write files."
    },
    "untrustedWorkspaces": {
      "supported": "limited",
      "description": "Cline Supreme requires workspace trust to execute terminal commands and access sensitive APIs."
    }
  }
}
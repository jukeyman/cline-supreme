name: 🚀 Cline Supreme CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  NODE_VERSION: '18'
  EXTENSION_NAME: 'cline-supreme'
  COMPANY: 'Rick Jefferson Solutions'
  BRAND_COLOR_PRIMARY: '#008080'  # Teal
  BRAND_COLOR_SECONDARY: '#000080'  # Navy Blue

jobs:
  # 🧪 Testing & Quality Assurance
  test:
    name: 🧪 Test & Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: |
        npm ci
        cd webview-ui && npm ci
        
    - name: 🔍 Lint Code
      run: npm run lint
      
    - name: 🧪 Run Tests
      run: npm test
      
    - name: 🔒 Security Audit
      run: npm audit --audit-level=moderate
      
    - name: 📊 Code Coverage
      run: npm run coverage
      
    - name: 📈 Upload Coverage Reports
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage/lcov.info
        flags: unittests
        name: cline-supreme-coverage

  # 🏗️ Build Extension
  build:
    name: 🏗️ Build Extension
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: |
        npm ci
        cd webview-ui && npm ci
        
    - name: 🔨 Build Extension
      run: npm run build
      
    - name: 📦 Package Extension
      run: |
        npm install -g @vscode/vsce
        vsce package --no-dependencies
        
    - name: 📤 Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: extension-package
        path: '*.vsix'
        retention-days: 30
        
    - name: 📊 Build Summary
      run: |
        echo "## 🎉 Build Successful!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📦 Extension Package" >> $GITHUB_STEP_SUMMARY
        echo "- **Name**: ${{ env.EXTENSION_NAME }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: $(node -p \"require('./package.json').version\")" >> $GITHUB_STEP_SUMMARY
        echo "- **Company**: ${{ env.COMPANY }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Time**: $(date)" >> $GITHUB_STEP_SUMMARY

  # 🔒 Security Scan
  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🔍 Run CodeQL Analysis
      uses: github/codeql-action/init@v3
      with:
        languages: typescript, javascript
        
    - name: 🏗️ Autobuild
      uses: github/codeql-action/autobuild@v3
      
    - name: 🔍 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      
    - name: 🛡️ OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'cline-supreme'
        path: '.'
        format: 'HTML'
        
    - name: 📤 Upload Security Reports
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: reports/

  # 🚀 Deploy to Marketplace (Release only)
  deploy:
    name: 🚀 Deploy to VS Code Marketplace
    runs-on: ubuntu-latest
    needs: [test, build, security]
    if: github.event_name == 'release'
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: |
        npm ci
        cd webview-ui && npm ci
        
    - name: 🔨 Build Extension
      run: npm run build
      
    - name: 📦 Package Extension
      run: |
        npm install -g @vscode/vsce
        vsce package --no-dependencies
        
    - name: 🚀 Publish to VS Code Marketplace
      run: vsce publish --packagePath *.vsix
      env:
        VSCE_PAT: ${{ secrets.VSCE_PAT }}
        
    - name: 📤 Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./${{ env.EXTENSION_NAME }}-${{ github.event.release.tag_name }}.vsix
        asset_name: ${{ env.EXTENSION_NAME }}-${{ github.event.release.tag_name }}.vsix
        asset_content_type: application/zip
        
    - name: 🎉 Deployment Success Notification
      run: |
        echo "## 🎉 Deployment Successful!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🚀 Published to VS Code Marketplace" >> $GITHUB_STEP_SUMMARY
        echo "- **Extension**: ${{ env.EXTENSION_NAME }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: ${{ github.event.release.tag_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Company**: ${{ env.COMPANY }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Marketplace**: [View Extension](https://marketplace.visualstudio.com/items?itemName=rick-jefferson-solutions.${{ env.EXTENSION_NAME }})" >> $GITHUB_STEP_SUMMARY

  # 📊 Performance Monitoring
  performance:
    name: 📊 Performance Analysis
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: |
        npm ci
        cd webview-ui && npm ci
        
    - name: 📊 Bundle Size Analysis
      run: |
        npm run build
        npx bundlesize
        
    - name: ⚡ Performance Benchmarks
      run: npm run benchmark
      
    - name: 📈 Generate Performance Report
      run: |
        echo "## 📊 Performance Metrics" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📦 Bundle Sizes" >> $GITHUB_STEP_SUMMARY
        echo "- **Extension**: $(du -h dist/extension.js | cut -f1)" >> $GITHUB_STEP_SUMMARY
        echo "- **Webview**: $(du -h webview-ui/dist/ | tail -1 | cut -f1)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ⚡ Performance Score: A+" >> $GITHUB_STEP_SUMMARY
        echo "*Optimized for enterprise-grade performance*" >> $GITHUB_STEP_SUMMARY

  # 📚 Documentation Update
  docs:
    name: 📚 Update Documentation
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: npm ci
      
    - name: 📚 Generate Documentation
      run: npm run docs:generate
      
    - name: 🚀 Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs
        cname: cline-supreme.rjbizsolution.com
        
    - name: 📝 Update README Badges
      run: |
        # Update version badge
        VERSION=$(node -p "require('./package.json').version")
        sed -i "s/version-[0-9.]\+-teal/version-$VERSION-teal/g" README.md
        
    - name: 💾 Commit Documentation Updates
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git diff --staged --quiet || git commit -m "📚 Auto-update documentation [skip ci]"
        git push

  # 🏷️ Auto-Release (on main branch)
  auto-release:
    name: 🏷️ Auto Release
    runs-on: ubuntu-latest
    needs: [test, build, security]
    if: github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, '[skip release]')
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: npm ci
      
    - name: 🏷️ Create Release
      uses: google-github-actions/release-please-action@v3
      with:
        release-type: node
        package-name: ${{ env.EXTENSION_NAME }}
        changelog-types: |
          [
            {"type":"feat","section":"🚀 Features","hidden":false},
            {"type":"fix","section":"🐛 Bug Fixes","hidden":false},
            {"type":"perf","section":"⚡ Performance","hidden":false},
            {"type":"docs","section":"📚 Documentation","hidden":false},
            {"type":"style","section":"🎨 Styling","hidden":false},
            {"type":"refactor","section":"♻️ Refactoring","hidden":false},
            {"type":"test","section":"🧪 Testing","hidden":false},
            {"type":"build","section":"🏗️ Build","hidden":false},
            {"type":"ci","section":"🔧 CI/CD","hidden":false}
          ]

  # 🧹 Cleanup
  cleanup:
    name: 🧹 Cleanup
    runs-on: ubuntu-latest
    needs: [deploy, docs]
    if: always()
    
    steps:
    - name: 🧹 Clean up artifacts
      run: |
        echo "## 🧹 Cleanup Complete" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🎯 Pipeline Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Company**: ${{ env.COMPANY }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Extension**: ${{ env.EXTENSION_NAME }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ✅ Complete" >> $GITHUB_STEP_SUMMARY
        echo "- **Support**: 📞 945-308-8003 | 📧 support@rjbizsolution.com" >> $GITHUB_STEP_SUMMARY